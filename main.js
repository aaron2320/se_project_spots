!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},t=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},r=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?(t.disabled=!0,t.classList.add(r.inactiveButtonClass)):(t.disabled=!1,t.classList.remove(r.inactiveButtonClass))},n=(e,r)=>{Array.from(e.querySelectorAll(r.inputSelector)).forEach((n=>t(e,n,r)))},o=new class{constructor(e){let{baseUrl:t,headers:r}=e;this.baseUrl=t,this.headers=r}_checkResponse(e){return e.ok?e.json():e.text().then((t=>{throw new Error(`HTTP error! Status: ${e.status} - ${t}`)}))}getAppInfo(){return Promise.all([this.getUserInfo(),this.getInitialCards()]).then((e=>{let[t,r]=e;return{user:t,cards:r}}))}getUserInfo(){return fetch(`${this.baseUrl}/users/me`,{headers:this.headers}).then(this._checkResponse)}getInitialCards(){return fetch(`${this.baseUrl}/cards`,{headers:this.headers}).then(this._checkResponse)}editUserInfo(e){let{name:t,about:r}=e;return fetch(`${this.baseUrl}/users/me`,{method:"PATCH",headers:this.headers,body:JSON.stringify({name:t,about:r})}).then(this._checkResponse)}addCard(e){let{name:t,link:r}=e;return fetch(`${this.baseUrl}/cards`,{method:"POST",headers:this.headers,body:JSON.stringify({name:t,link:r})}).then(this._checkResponse)}removeCard(e){return fetch(`${this.baseUrl}/cards/${e}`,{method:"DELETE",headers:this.headers}).then(this._checkResponse)}addLike(e){return fetch(`${this.baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this.headers}).then(this._checkResponse)}removeLike(e){return fetch(`${this.baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this.headers}).then(this._checkResponse)}updateAvatar(e){return fetch(`${this.baseUrl}/users/me/avatar`,{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"eb9bb101-c854-4169-9f87-c5a28a8b7a33","Content-Type":"application/json"}}),a=document.querySelector(".profile__edit-btn"),s=document.querySelector(".profile__add-btn"),c=document.querySelector(".profile__name"),l=document.querySelector(".profile__description"),i=document.querySelector(".profile__avatar"),d=document.querySelector("#edit-modal"),u=document.querySelector("#add-card-modal"),m=document.querySelector("#preview-modal"),h=document.querySelector("#avatar-modal"),_=document.querySelector("#delete-modal"),v=document.forms["edit-profile-form"],p=document.forms["card-form"],f=document.forms["avatar-form"],y=document.forms["delete-form"],b=d.querySelector(".modal__close-btn"),S=u.querySelector(".modal__close-btn"),k=m.querySelector(".modal__close-btn"),L=h.querySelector(".modal__close-btn"),C=_.querySelector(".modal__close-btn"),q=_.querySelector(".modal__cancel-btn"),E=d.querySelector("#profile-name-input"),g=d.querySelector("#profile-description-input"),x=u.querySelector("#add-card-link-input"),$=u.querySelector("#card-caption-input"),U=h.querySelector("#avatar-url-input"),A=document.querySelector(".profile__edit-avatar-link"),I=(document.querySelector(".profile__avatar-container"),document.querySelector("#card-template")),D=document.querySelector(".cards__list"),T=document.querySelector(".modal__image"),w=document.querySelector(".modal__caption");let R=null,P=null,F=null;function B(e){console.log("Creating card with data:",e);const t=I.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),n=t.querySelector(".card__image"),o=t.querySelector(".card__like-btn"),a=t.querySelector(".card__delete-btn");r.textContent=e.name,n.src=e.link,n.alt=e.name;const s=e.isLiked;return console.log(`Card ${e._id} isLiked: ${s}`),s&&o.classList.add("card__like-btn_liked"),a.addEventListener("click",(()=>function(e,t){R=e,P=t._id,N(_)}(t,e))),o.addEventListener("click",J.bind(null,o,e)),n.addEventListener("click",(()=>{T.src=e.link,T.alt=e.name,w.textContent=e.name,N(m)})),t}function H(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"prepend";const r=B(e);D[t](r)}function N(e){e.classList.add("modal_opened"),document.addEventListener("keydown",j),e.addEventListener("mousedown",M)}function O(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",j),e.removeEventListener("mousedown",M)}function J(e,t){const r=e.classList.contains("card__like-btn_liked");console.log(`Like button clicked, isLiked: ${r}, Card ID: ${t._id}`),(r?o.removeLike.bind(o):o.addLike.bind(o))(t._id).then((t=>{console.log("Like update response:",t);const r=t.likes&&t.likes.some((e=>e._id===F));e.classList.toggle("card__like-btn_liked",r)})).catch((e=>console.error("Failed to update like:",e)))}function j(e){if("Escape"===e.key){const e=document.querySelector(".modal_opened");e&&O(e)}}function M(e){e.target.classList.contains("modal")&&O(e.target)}var z;a.addEventListener("click",(()=>{E.value=c.textContent,g.value=l.textContent,n(v,e),N(d)})),s.addEventListener("click",(()=>N(u))),A.addEventListener("click",(t=>{t.preventDefault(),U.value=i.src,n(f,e),N(h)})),b.addEventListener("click",(()=>O(d))),S.addEventListener("click",(()=>O(u))),k.addEventListener("click",(()=>O(m))),L.addEventListener("click",(()=>O(h))),C.addEventListener("click",(()=>O(_))),q.addEventListener("click",(()=>O(_))),v.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter,r=t.textContent;t.textContent="Saving...";const n=E.value,a=g.value;o.editUserInfo({name:n,about:a}).then((e=>{c.textContent=e.name,l.textContent=e.about,O(d)})).catch((e=>console.error("Failed to update profile:",e))).finally((()=>t.textContent=r))})),p.addEventListener("submit",(function(t){t.preventDefault();const n=t.submitter,a=n.textContent;n.textContent="Saving...";const s=$.value,c=x.value;o.addCard({name:s,link:c}).then((t=>{H(t),O(u),p.reset(),r([$,x],n,e)})).catch((e=>console.error("Failed to add card:",e))).finally((()=>n.textContent=a))})),f.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter,r=t.textContent;t.textContent="Saving...";const n=U.value;o.updateAvatar(n).then((e=>{i.src=e.avatar,O(h)})).catch((e=>console.error("Failed to update avatar:",e))).finally((()=>t.textContent=r))})),y.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter,r=t.textContent;t.textContent="Saving...",o.removeCard(P).then((()=>{R.remove(),O(_),R=null,P=null})).catch((e=>console.error("Failed to delete card:",e))).finally((()=>t.textContent=r))})),o.getAppInfo().then((e=>{let{user:t,cards:r}=e;console.log("API User Data:",t),console.log("API Cards Data:",r),F=t._id,c.textContent=t.name,l.textContent=t.about,i.src=t.avatar,D.innerHTML="",r.forEach((e=>H(e,"append")))})).catch((e=>console.error("Failed to load initial data:",e))),z=e,document.querySelectorAll(z.formSelector).forEach((e=>((e,n)=>{const o=Array.from(e.querySelectorAll(n.inputSelector)),a=e.querySelector(n.submitButtonSelector);r(o,a,n),e.addEventListener("reset",(()=>{r(o,a,n)})),o.forEach((s=>{s.addEventListener("input",(()=>{((e,r,n)=>{r.validity.valid?t(e,r,n):((e,t,r,n)=>{e.querySelector(`#${t.id}-error`).textContent=r,t.classList.add(n.inputErrorClass)})(e,r,r.validationMessage,n)})(e,s,n),r(o,a,n)}))}))})(e,z)))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,